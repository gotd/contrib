// Code generated by 'yaegi extract github.com/gotd/td/telegram/query/messages/stickers/featured'. DO NOT EDIT.

package yaegi

import (
	"context"
	"github.com/gotd/td/telegram/query/messages/stickers/featured"
	"github.com/gotd/td/tg"
	"reflect"
)

func init() {
	Symbols["github.com/gotd/td/telegram/query/messages/stickers/featured/featured"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"NewIterator":     reflect.ValueOf(featured.NewIterator),
		"NewQueryBuilder": reflect.ValueOf(featured.NewQueryBuilder),

		// type definitions
		"Elem":                               reflect.ValueOf((*featured.Elem)(nil)),
		"GetOldFeaturedStickersQueryBuilder": reflect.ValueOf((*featured.GetOldFeaturedStickersQueryBuilder)(nil)),
		"Iterator":                           reflect.ValueOf((*featured.Iterator)(nil)),
		"Query":                              reflect.ValueOf((*featured.Query)(nil)),
		"QueryBuilder":                       reflect.ValueOf((*featured.QueryBuilder)(nil)),
		"QueryFunc":                          reflect.ValueOf((*featured.QueryFunc)(nil)),
		"Request":                            reflect.ValueOf((*featured.Request)(nil)),

		// interface wrapper definitions
		"_Query": reflect.ValueOf((*_github_com_gotd_td_telegram_query_messages_stickers_featured_Query)(nil)),
	}
}

// _github_com_gotd_td_telegram_query_messages_stickers_featured_Query is an interface wrapper for Query type
type _github_com_gotd_td_telegram_query_messages_stickers_featured_Query struct {
	WQuery func(ctx context.Context, req featured.Request) (tg.MessagesFeaturedStickersClass, error)
}

func (W _github_com_gotd_td_telegram_query_messages_stickers_featured_Query) Query(ctx context.Context, req featured.Request) (tg.MessagesFeaturedStickersClass, error) {
	return W.WQuery(ctx, req)
}
