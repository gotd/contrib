name: E2E
on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  vault:
    runs-on: ubuntu-latest
    services:
      vault:
        image: "vault:latest"
        ports:
          - 8200:8200
        env:
          VAULT_DEV_ROOT_TOKEN_ID: testtoken
    steps:
      - uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v2.2.0
        with:
          go-version: 1.17

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: check-mod-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            check-mod-${{ runner.os }}-go-

      - name: Run tests
        env:
          VAULT_ADDR: "http://localhost:8200"
          VAULT_TOKEN: "testtoken"
        run: make e2e_vault_test

      - name: Send coverage
        uses: codecov/codecov-action@v2.1.0
        with:
          file: profile.out

  redis:
    runs-on: ubuntu-latest
    services:
      redis:
        image: "redis:latest"
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v2.2.0
        with:
          go-version: 1.17

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: check-mod-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            check-mod-${{ runner.os }}-go-

      - name: Run tests
        env:
          REDIS_ADDR: "localhost:6379"
        run: make e2e_redis_test

      - name: Send coverage
        uses: codecov/codecov-action@v2.1.0
        with:
          file: profile.out

  s3:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v2.2.0
        with:
          go-version: 1.17

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: check-mod-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            check-mod-${{ runner.os }}-go-

      - name: Setup minio
        run: |
          docker run -d -p 9000:9000 --name minio \
                     -e "MINIO_ACCESS_KEY=minioadmin" \
                     -e "MINIO_SECRET_KEY=minioadmin" \
                     -v /tmp/data:/data \
                     -v /tmp/config:/root/.minio \
                     minio/minio server /data

      - name: Run tests
        env:
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin
          S3_ADDR: "localhost:9000"
        run: make e2e_s3_test

      - name: Send coverage
        uses: codecov/codecov-action@v2.1.0
        with:
          file: profile.out

  tg_io:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v2.2.0
        with:
          go-version: 1.17

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: check-mod-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            check-mod-${{ runner.os }}-go-
      - name: Run tests
        env:
          TG_IO_E2E: 1
        run: make e2e_tg_io_test

      - name: Send coverage
        uses: codecov/codecov-action@v2.1.0
        with:
          file: profile.out